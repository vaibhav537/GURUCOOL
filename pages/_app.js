import "../styles/globals.css";
import Navbar from "./components/Navbar.jsx";
import Footer from "./components/Footer.jsx";
import { useRouter } from "next/router";
import { ThemeProvider } from "next-themes";
import { useEffect, useState } from "react";
import LoadingBar from "react-top-loading-bar";
import Loader from "./components/Loader";
import Head from "next/head";

function MyApp({ Component, pageProps }) {
  const router = useRouter();
  const { asPath } = router;
  const noNav = [
    "/admin",
    "/teacher/selectcategory",
    "/admin/ifqRPHleaQkbEvmwOPEqb",
    "/admin/Addcategory",
    "/admin/DeleteCategory",
    "/admin/UpdateCategory",
    "/admin/Ranking",
  ];
  const [isLoading, setIsLoading] = useState(true);
  const [teacher, setTeacher] = useState({ value: null });
  const [student, setStudent] = useState({ value: null });
  const [key, setKey] = useState(0);
  const [render, setRender] = useState(0);
  const [progress, setProgress] = useState(0);

  useEffect(() => {
    router.events.on("routeChangeStart", () => {
      setProgress(40);
    });

    router.events.on("routeChangeComplete", () => {
      setProgress(100);
    });
    setTimeout(() => {
      setIsLoading(false);
    }, 1000);
    const teacherToken = localStorage.getItem("teacher-token");
    const studentToken = localStorage.getItem("student-token");
    if (teacherToken) {
      setTeacher({ value: teacherToken });
      setKey(Math.random());
    }
    if (studentToken) {
      setStudent({ value: studentToken });
      setKey(Math.random());
    }
  }, [router.query]);

  const logout = () => {
    localStorage.removeItem("teacher-token");
    setTeacher({ value: null });
    setRender(Math.random());
    setKey(Math.random());
  };

  return (
    <>
      {isLoading ? (
        <>
          <Head>
            <title>GURU COOL</title>
            <meta
              name="description"
              content="Generated by developer for the who needs to be thier doubts and want to learn from the expert"
            />
            <link rel="icon" href="/images/logo.png" />
          </Head>
          <div className="flex items-center justify-center">
            <Loader />
          </div>
        </>
      ) : (
        <ThemeProvider attribute="class" enableSystem={true}>
          {noNav.includes(asPath) ? null : (
            <Navbar key={key} teacher={teacher} logout={logout} />
          )}
          <LoadingBar
            color="#000000"
            progress={progress}
            waitingTime={100}
            onLoaderFinished={() => setProgress(0)}
          />
          <Component {...pageProps} render={render} teacherKam={teacher} logout={logout} />
          {noNav.includes(asPath) ? null : <Footer />}
        </ThemeProvider>
      )}
    </>
  );
}

export default MyApp;
