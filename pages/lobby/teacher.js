import { useRouter } from "next/router";
import React, { useCallback, useEffect, useState } from "react";
import { useSocket } from "../context/SocketProvider";
import Head from "next/head";

const teacher = () => {
  const [userEmail, setUserEmail] = useState("");
  const [userRoom, setUserRoom] = useState("");

  const router = useRouter();

  const socket = useSocket();

  const getInformationTeacher = async () => {
    if (await JSON.parse(localStorage.getItem("teacher-token"))) {
      if (await JSON.parse(localStorage.getItem("teacher-token"))) {
        const teacherToken = await JSON.parse(
          localStorage.getItem("teacher-token")
        );

        const info = await fetch("/api/teacherTokenData", {
          method: "POST",
          headers: {
            "Content-type": "application/json",
          },
          body: JSON.stringify({
            token: teacherToken,
          }),
        });

        const result = await info.json();

        if (result.status === true) {
          setUserEmail(result.teacher.email);
          setUserRoom(result.teacher.room)
        } else {
          console.log("Failed");
        }
      }
    }
  };

  useEffect(() => {
    if (!localStorage.getItem("teacher-token")) {
      router.push("/");
    }
  }, []);

  useEffect(() => {
    getInformationTeacher();
  }, [router.query]);

  const handleSubmitForm = useCallback(
    (e) => {
      e.preventDefault();
      socket.emit("room:join", { userEmail, userRoom });
    },
    [userEmail, userRoom, socket]
  );

  const handleJoinRoom = useCallback(
    (data) => {
      const { userEmail, userRoom } = data;
      router.push(`/room/${userRoom}`);
    },
    [router]
  );

  useEffect(() => {
    socket.on("room:join", handleJoinRoom);
    return () => {
      socket.off("room:join", handleJoinRoom);
    };
  }, [socket, handleJoinRoom]);

  return (
    <>
      <Head>
        <title>GURU COOL : LOBBY</title>
        <meta
          name="description"
          content="Generated by developer for the who needs to be thier doubts and want to learn from the expert"
        />
        <link rel="icon" href="/images/logo.png" />
      </Head>
      <div className="bg-green-100 h-screen text-black dark:text-white flex flex-col items-center">
        <h1 className="text-7xl mt-[12rem]">Lobby</h1>
        <form onSubmit={handleSubmitForm}>
          <div className="my-20 flex flex-col">
            <label htmlFor="email" className="text-3xl">
              Email ID :{" "}
            </label>
            <input
              type="email"
              id="email"
              className="my-5 w-96 outline-none text-center select-none ring-2 ring-green-500 bg-white focus:ring-4 p-1 text-lg transition-all duration-500 rounded"
              value={userEmail}
              disabled
              autoComplete="off"
            />
          </div>
          <div className="my-20 flex flex-col">
            <label htmlFor="room" className="text-3xl">
              Room Number
            </label>
            <input
              type="text"
              id="room"
              className="my-5 w-96 text-center  outline-none select-none ring-2 ring-green-500 bg-white focus:ring-4 p-1 text-lg transition-all duration-500 rounded"
              value={userRoom}
              disabled
              autoComplete="off"
            />
          </div>
          <button
          type="submit"
        className="mt-10 outline-none  bg-emerald-600 w-[8rem] p-2 text-[19px] ml-[8rem] text-white rounded hover:shadow-3xl hover:bg-emerald-300 transition-all duration-500"
        >Join</button>
        </form>
      </div>
    </>
  );
};

export default teacher;
